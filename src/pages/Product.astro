---
import Product_ from '../components/Products/Pages.vue'
import {
	bytes32Hex,
	i18nFactory,
	type ClubsPropsPages,
} from '@devprotocol/clubs-core'
import type {
	CategoriesConfig,
	GlobalConfig,
	Product,
	ProductsConfig,
} from '../types.ts'
import type { CheckoutItemPassportOffering } from '@devprotocol/clubs-plugin-passports'
import { Strings } from '../i18n'
import List from '../components/Products/List.vue'

const langs = Astro.request.headers.get('accept-language')?.split(',') ?? ['en']

type Props = ClubsPropsPages & {
	globalConfig: GlobalConfig
	productsConfig?: ProductsConfig
	products: Product[]
	product: CheckoutItemPassportOffering
	bundledProducts: Product[]
	group: Product[]
	categories?: CategoriesConfig
	base: string
}

const {
	globalConfig,
	productsConfig,
	product,
	products,
	bundledProducts,
	group,
	categories,
	base,
} = Astro.props
const i18n = i18nFactory(Strings)(langs)

const setsIncludingThis = products.filter((item) =>
	(item.product.props.offering.bundle ?? []).find(
		(payl) => bytes32Hex(payl) === product.payload,
	),
)
---

<Product_
	client:load
	langs={langs}
	globalConfig={globalConfig}
	productsConfig={productsConfig}
	product={product}
	group={group}
	categories={categories}
	base={base}
/>

{
	bundledProducts && bundledProducts.length > 0 && (
		<div class="mt-6 grid content-start gap-2.5 rounded-xl bg-teal-50 p-3 lg:col-span-2 lg:gap-5 lg:p-8">
			<span class="text-xl font-bold text-teal-500 lg:text-3xl">
				{i18n('BundledProducts')}:
			</span>
			<List
				client:idle
				products={bundledProducts}
				hideHiddenItems={false}
				langs={langs}
				categories={categories}
				base={base}
			/>
		</div>
	)
}

{
	setsIncludingThis && setsIncludingThis.length > 0 && (
		<div class="mt-6 grid content-start gap-2.5 rounded-xl bg-neutral-100 p-3 lg:col-span-2 lg:gap-5 lg:p-8">
			<span class="text-xl font-bold text-neutral-500 lg:text-3xl">
				{i18n('SetsIncludingThis')}:
			</span>
			<List
				client:idle
				products={setsIncludingThis}
				langs={langs}
				categories={categories}
				base={base}
			/>
		</div>
	)
}

{
	products && products.length > 0 && (
		<div class="mt-6 grid gap-2.5 rounded-xl border border-neutral-300 p-3 lg:col-span-2 lg:gap-5 lg:p-8">
			<span class="text-xl font-bold text-neutral-500 lg:text-3xl">
				{i18n('AllProducts')}:
			</span>
			<List
				client:idle
				products={products}
				langs={langs}
				categories={categories}
				base={base}
			/>
		</div>
	)
}
