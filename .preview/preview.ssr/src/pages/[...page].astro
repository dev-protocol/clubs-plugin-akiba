---
import '../../../global.css'
import type { InferGetStaticPropsType } from 'astro'
import {
	type ClubsFunctionFactoryOptions,
	type ClubsFunctionPageFactoryResult,
	type ClubsGetStaticPathsItem,
	pageFactory,
	routerFactory,
} from '@devprotocol/clubs-core'
import type { UndefinedOr } from '@devprotocol/util-ts'
import config from '../../../config'
import plugins from '../../../plugins'
import ConnectButton from './ConnectButton.vue'
import { Redis } from '@devprotocol/clubs-core/redis'

const { page } = Astro.params
const CLUB = process.env.CLUB
const club = async () => {
	const redis = await Redis.client()
	const club = await redis.get(`${CLUB}`)
	return club ? () => club : config
}
const options = {
	config: CLUB ? await club() : config,
	plugins,
} satisfies ClubsFunctionFactoryOptions

const { getStaticPaths } = pageFactory(
	options,
) as ClubsFunctionPageFactoryResult<typeof options>

const router = routerFactory(await getStaticPaths(), (p) => p.params.page)
const path = router(page) as UndefinedOr<
	ClubsGetStaticPathsItem<InferGetStaticPropsType<typeof getStaticPaths>>
>

const Content = path?.props.component
const Layout = path?.props.layout
---

{
	Layout && Content && (
		<Layout {...path.props}>
			<ConnectButton
				client:only="vue"
				projectId="clubs"
				label="SignIn"
				slot="clubs:connect-button"
			/>
			<Content {...path.props}>
				<button
					slot="akiba:checkout:result:after-heading"
					class="w-auto rounded-full bg-black px-5 py-2 text-sm font-medium text-white transition-colors hover:bg-gray-800 disabled:cursor-not-allowed disabled:opacity-60 sm:text-base"
				>
					Edit my Passport
				</button>
			</Content>
		</Layout>
	)
}
